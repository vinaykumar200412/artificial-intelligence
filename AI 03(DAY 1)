from collections import deque

def water_jug_bfs(jug1_capacity, jug2_capacity, target):
    visited = set()
    queue = deque([(0, 0)])  # Starting state with both jugs empty

    while queue:
        jug1, jug2 = queue.popleft()

        if (jug1, jug2) in visited:
            continue

        visited.add((jug1, jug2))

        if jug1 == target or jug2 == target or jug1 + jug2 == target:
            return True

        # Possible next states
        states = [
            (jug1_capacity, jug2),  # Fill jug1
            (jug1, jug2_capacity),  # Fill jug2
            (0, jug2),              # Empty jug1
            (jug1, 0),              # Empty jug2
            (min(jug1 + jug2, jug1_capacity), max(0, jug2 - (jug1_capacity - jug1))),  # Pour jug2 into jug1
            (max(0, jug1 - (jug2_capacity - jug2)), min(jug1 + jug2, jug2_capacity))   # Pour jug1 into jug2
        ]

        for state in states:
            if state not in visited:
                queue.append(state)

    return False

# Example usage
jug1_capacity = 4
jug2_capacity = 3
target = 2
result = water_jug_bfs(jug1_capacity, jug2_capacity, target)
print(f"Is it possible to measure exactly {target} liters? {'Yes' if result else 'No'}")
